name: Pipeline CI/CD

on:
  push:
    branches:
      - main  # Lancement automatique sur push vers la branche `main`
    paths-ignore:
      - 'models/**'  # Ignore les commits qui ne modifient que le dossier models/
  workflow_dispatch:  # Permet de lancer le pipeline manuellement via l'interface GitHub

jobs:

  format-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Autoformat code with black and autopep8
        run: |
          pip install black==25.1.0 autopep8  # black et autopep8 ne sont pas dans requirements.txt
          black .
          autopep8 --in-place --aggressive --aggressive -r .

      - name: linting
        run: |
          pip install flake8
          flake8 --ignore=E501 .  # on utilise flake8 pour le linting, on ignore les erreurs de longueur de ligne
          
  download_mlflow_model:
    runs-on: self-hosted
    needs: format-and-lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }} # Utilisation du PAT
          fetch-depth: 0 # Important pour pouvoir pousser des modifications

      - name: Installer MLflow
        run: pip install mlflow

      - name: Installer Git LFS
        run: |
          git lfs install

      - name: Téléchargement du modèle MLflow
        env:
          MLFLOW_TRACKING_URI: http://127.0.0.1:5000
        run: python download_model_github.py

      - name: Configurer Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@example.com" # Adresse e-mail valide

      - name: Suivre les fichiers volumineux avec Git LFS
        run: |
          git lfs track "models/model/tf2model/variables/*.data*"  # Suivre les fichiers volumineux
          git add .gitattributes  # Ajouter le fichier .gitattributes pour Git LFS

      - name: Commiter les artefacts téléchargés
        run: |
          git add models/
          $changes = git diff --cached --quiet
          if ($changes -eq $null) {
            echo "Aucun fichier à ajouter"
          } else {
            git commit -m "Ajout des artefacts MLflow téléchargés par le runner"
          }

      - name: Pousser les modifications
        run: |
          $changes = git diff --cached --quiet
          if ($changes -eq $null) {
            echo "Aucun changement à pousser"
          } else {
            git push origin main
          }


  build_and_push_docker_image:
    runs-on: self-hosted
    needs: download_mlflow_model # Dépend du téléchargement du modèle
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}


      - name: Pull base image (force authentication)
        run: |
          docker pull ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/python:3.12-slim

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/sentiment_analysis-fastapi-app:${{ github.sha }} .

      - name: Push Docker image to Azure ACR
        run: |
          docker push ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/sentiment_analysis-fastapi-app:${{ github.sha }}

  deploy_to_azure_web_app:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    if: ${{ always() && needs.build_and_push_docker_image.result == 'success' }}

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEB_APP_NAME }}
          images: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/sentiment_analysis-fastapi-app:${{ github.sha }}

